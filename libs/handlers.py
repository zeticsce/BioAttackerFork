import os
import shutil
import asyncio
import requests
import random
import subprocess
import sys
import datetime
import re
import time
import math

from app import dp, bot, query, strconv, save_message, is_host
from config import MYSQL_HOST
from Labs import Labs

labs = Labs()

from commands.improvements import *
from commands.BioTop import *

from aiogram import Bot, types
from aiogram.types import ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, InputFile
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor

from math import ceil, floor

work_path = os.path.abspath(os.curdir)


async def skloneniye(num):
    names = ['–¥–µ–Ω—å', '–¥–Ω—è', '–¥–Ω–µ–π']
    n = num % 100
    if n >= 5 and n <= 20: return names[2]
    n = num % 10
    if n == 1: return names[0]
    if n >= 2 and n <= 4: return names[1]
    return names[2]


if requests.get('https://ip.beget.ru/').text.replace(' ', '').replace('\n', '') == MYSQL_HOST: # –ù–µ–æ–±—Ö–æ–¥–∏–º–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ /git –∏ /restar —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥–µ
    @dp.message_handler(commands=["git"])
    async def handler(message: types.message):
        if message['from']['id'] not in [780882761, 1058211493]: return

        git_message = await message.reply("ü™õ *–û–∂–∏–¥–∞–µ–º –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...*", parse_mode="Markdown")

        pull_result = subprocess.Popen(["git", "pull", "https://github.com/kawasaji/BioAttacker"], stdout=subprocess.PIPE, text=True, stderr=subprocess.PIPE)
        output, errors = pull_result.communicate(input="Hello from the other side!")
        pull_result.wait()
        await bot.edit_message_text(f"ü™õ *–û–∂–∏–¥–∞–µ–º –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...\n–†–µ–∑—É–ª—å—Ç–∞—Ç:*\n`{output}`", git_message.chat.id, git_message.message_id, parse_mode="Markdown")
        if "Already up to date.\n" != output:
            await message.reply(f"*–í—ã—Ö–æ–¥!* _(‚è∞{datetime.datetime.now().strftime('%d.%m.%Y %H:%M:%S')})_", parse_mode="Markdown")

            try:
                dp.stop_polling()
                await dp.wait_closed()
                await bot.close()
            except: pass

            os.system(f"python {work_path}/app.py &")
            sys.exit(0)
        else: await message.reply(f"*–§–∞–π–ª—ã –Ω–µ –∑–∞—Ç—Ä–æ–Ω—É—Ç—ã, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è!*", parse_mode="Markdown")
    @dp.message_handler(commands=["restart"])
    async def handler(message: types.message):
        if message['from']['id'] not in [780882761, 1058211493]: return

        await message.reply(f"*–í—ã—Ö–æ–¥!* _(‚è∞{datetime.datetime.now().strftime('%d.%m.%Y %H:%M:%S')})_", parse_mode="Markdown")

        try:
            dp.stop_polling()
            await dp.wait_closed()
            await bot.close()
        except: pass


        os.system(f"python {work_path}/app.py &")
        sys.exit(0)

@dp.message_handler(commands=["exit"], commands_prefix='.')
async def hi_there(message: types.message):
    if message['from']['id'] not in [780882761, 1058211493]: return
    await message.reply(f"*–í—ã—Ö–æ–¥!* _(‚è∞{datetime.datetime.now().strftime('%d.%m.%Y %H:%M:%S')})_", parse_mode="Markdown")
    sys.exit(0)

@dp.message_handler(commands=["start"], commands_prefix='!/.')
async def hi_there(message: types.message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! *** –ø—Ä–∏–¥—É–º–∞—Ç—å —Ç–µ–∫—Å—Ç ***")


@dp.message_handler(commands=["export", "exp"], commands_prefix='!/.')
async def handler(message: types.message):
    """
        –≠–∫—Å–ø–æ—Ä—Ç —Ñ–∞–π–ª–æ–≤ –∏–∑ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ /export <–ø—É—Ç—å –∫ —Ñ–∞–π–ª—É>
        –ü—Ä–æ—Å—Ç–æ /export —Å–æ–∑–¥–∞–µ—Ç –∞—Ä—Ö–∏–≤ –≤—Å–µ–≥–æ –±–æ—Ç–∞
    """
    if message['from']['id'] not in [780882761, 1058211493]: return
    message.text = message.text.split(" ")
    message.text.pop(0)
    message.text = ' '.join(message.text).replace("\\", "/").replace(" ", "")
    if message.text == '' or message.text == '/':
        await bot.send_document(message.chat.id,  InputFile(shutil.make_archive("files", 'zip', work_path), filename='BioAttacker.zip'))
        os.remove(work_path + "/files.zip")
    else:
        if not message.text.startswith('/'): message.text = "/" + message.text
        if os.path.exists(work_path + message.text):
            if not os.path.isfile(work_path + message.text):
                await bot.send_document(message.chat.id,  InputFile(shutil.make_archive("files", 'zip', work_path + message.text),  filename=message.text + ".zip"))
                os.remove(work_path + "/files.zip")
            else:
                await bot.send_document(message.chat.id,  InputFile(work_path + message.text, filename=message.text))
        else: await message.reply(f"ü™õ –ü—É—Ç—å `{message.text}` –Ω–µ –Ω–∞–π–¥–µ–Ω")


@dp.message_handler(content_types=['text']) 
async def handler(message: types.message):
    save_message(message)
    bio_infect = re.fullmatch(r"(–±–∏–æ–µ–±)( \d{1,2})?( \S+)?", message.text.lower()) # —Ä–µ–≥—É–ª—è—Ä–∫–∞ –Ω–∞ –∑–∞—Ä–∞–∂–µ–Ω–∏—è
    if bio_infect != None:
        lab = labs.get_lab(message['from']['id'])
        if lab.has_lab:  #–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ª–∞–±—ã
            attempts = int(bio_infect.group(2)) if bio_infect.group(2) != None else None # –∫–æ–ª–≤–æ –ø–æ–ø—ã—Ç–æ–∫
            if attempts == None: attempts = 1 # –µ—Å–ª–∏ –∫–æ–ª–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ, –∑–∞–¥–∞–≤–∞—Ç—å 1

            if attempts > 10: # –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –¥–æ 10
                await message.reply(text=f"üë∫ –ó–∞ —Ä–∞–∑ –º–∞–∫—Å–∏–º—É–º 10 –ø–æ–ø—ã—Ç–æ–∫!",  parse_mode="Markdown")
                return

            if lab.patogens <= 0: # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–∞—Ç—ã
                await message.reply(text=f"üë∫ –ñ–¥–∏ –Ω–æ–≤—ã—Ö –ø–∞—Ç–æ–≥–µ–Ω–æ–≤!",  parse_mode="Markdown")
                return

            victim_tag = bio_infect.group(3).strip().replace("tg://openmessage?user_id=", "").replace("https://t.me/", "").replace("@", "") if bio_infect.group(3) != None else None # —Ç–µ–≥ –∂–µ—Ä—Ç–≤—ã –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è, None –µ—Å–ª–∏ –µ–≥–æ –Ω–µ–±—ã–ª–æ

            victim = None # –∂–µ—Ä—Ç–≤–∞ (–ø–∏–∑–¥–µ—Ü —è –≤—Å–µ–≥–¥–∞ victum –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª)
            chance = random.random() # —Ä–∞–Ω–¥–æ–º—ã—à –æ—Ç 0 –¥–æ 1

            profit = 0
            pats = 0

            if message.reply_to_message: # –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –∞–π–¥–∏ –∂–µ—Ä—Ç–≤—ã –ø—Ä–∏ —Ä–µ–ø–ª–∞–µ
                if message.reply_to_message["from"]["is_bot"] == True: # —Ñ–∏–ª—å—Ç—Ä –Ω–∞ –±–æ—Ç–æ–≤
                    await message.reply("–ù–µ–ª—å–∑—è –∑–∞—Ä–∞–∑–∏—Ç—å –±–æ—Ç–∞")
                    return
                victim = labs.get_user(message.reply_to_message["from"]["id"]) # –æ–±—å–µ–∫—Ç –∂–µ—Ä—Ç–≤—ã user_id, user_name, name


            if victim_tag != None: # –µ—Å–ª–∏ –≤—Å–µ —Ö–æ—Ä–æ—à–æ, —É –Ω–∞—Å –æ—Å—Ç–∞–Ω–µ—Ç—Å—è victim_user, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç –∞–π–¥–∏ —é–∑–µ—Ä–∞
                # –≤ –ø—Ä–∏–æ—Ä–µ—Ç–µ—Ç–µ victim_tag, –µ—Å–ª–∏ –±—É–¥–µ—Ç —Ä–µ–ø–ª–∞–π, —Ç–æ –æ–Ω —Å–Ω–∞—á–∞–ª–∞ —á–µ–∫–Ω–µ—Ç victim_tag, –µ—Å–ª–∏ –æ–Ω –ø—Ä–∏—Å—É—Ç—Å–≤—É–µ—Ç, —Ç–æ –±—É–¥–µ—Ç –±–∏—Ç—å –µ–≥–æ
                if re.fullmatch(r"[\w]+", victim_tag) == None: # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ç–µ–≥–∞, –Ω–µ—Ç –ª–∏ —Ç–∞–º —Ä—É—Å—Å–∫–∏—Ö –±—É–∫–≤, —Å–ø–µ—Ü —Å–∏–º–≤–æ–ª–æ–≤ –∏ —Ç–¥
                    await message.reply(text=f"üë∫ –Æ–∑–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!",  parse_mode="Markdown")
                    return
                else:
                    victim = labs.get_user(victim_tag) # –ø—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å—Ç—å –ª–∏ –æ–Ω –≤ –±–∞–∑–µ
                    if victim == None:
                        await message.reply(text=f"üë∫ –Æ–∑–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!",  parse_mode="Markdown")
                        return
                    elif is_host: # –Ω–∞ —Ö–æ—Å—Ç–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–¥ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É–¥–∞—Ä–∞ –ø–æ —é–∑–µ—Ä—É
                        victim_in_list = lab.get_victums(f"WHERE `victums{lab.user_id}`.`user_id` LIKE '{victim['user_id']}'")
                        if len(victim_in_list) != 0:
                            victim_in_list = victim_in_list[0]
                            if victim_in_list['from_infect'] > (int(time.time())-3600):
                                untill = math.floor((victim_in_list['from_infect'] - (int(time.time())-3600)) / 60) # –∫–æ–ª–≤–æ –º–∏–Ω—É—Ç
                                declination = "" # —Å–∫–ª–æ–Ω–µ–Ω–∏–µ –º–∏–Ω—É—Ç—É/–º–∏–Ω—É—Ç—ã/–º–∏–Ω—É—Ç
                                if untill <= 20:
                                    if untill == 1: declination = "–º–∏–Ω—É—Ç–∞"
                                    elif untill <= 4: declination = "–º–∏–Ω—É—Ç—ã"
                                    else: declination = "–º–∏–Ω—É—Ç"
                                else: 
                                    if untill%10 == 1: declination = "–º–∏–Ω—É—Ç–∞"
                                    elif untill%10 <= 4: declination = "–º–∏–Ω—É—Ç—ã"
                                    else: declination = "–º–∏–Ω—É—Ç"

                                await message.reply(text=f"üë∫ –¢—ã —Å–º–æ–∂–µ—à—å –∑–∞—Ä–∞–∑–∏—Ç—å –µ–≥–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ —á–µ—Ä–µ–∑ {untill} {declination}!",  parse_mode="Markdown")
                                return 

            if victim == None: # —Ç—É—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ä–∞–Ω–¥–æ–º–Ω—ã–π –≤—ã–±–æ—Ä –∂–µ—Ä—Ç–≤—ã
                if chance < 0.40: victim = labs.get_random_victum() # 40% –∞–±—Å–æ–ª—é—Ç–Ω–æ —Ä–∞–Ω–¥–æ–º–Ω—ã–π —á–µ–ª –∏–∑ –±–¥
                elif chance < 0.40:
                    victims = lab.get_victums(params="ORDER BY RAND() LIMIT 4") # 40% –ø–µ—Ä–µ–±–∏–≤ —Å–ª—É—á–∞–π–Ω–æ–π –∂–µ—Ä—Ç–≤—ã
                    victim = None
                    for i in victims:
                        if i["from_infect"] <= int(time.time()) - (60*60): # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–¥
                            victim = i
                            break
                elif chance < 0.90: 
                    victim = query("SELECT * FROM `bio_attacker`.`labs` INNER JOIN `telegram_data`.`tg_users` ON `telegram_data`.`tg_users`.`user_id`=`bio_attacker`.`labs`.`user_id` ORDER BY RAND() LIMIT 1;")[0] # 10% –∂–µ—Ä—Ç–≤–∞ –∏–∑ —É–∂–µ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ª–∞–±
                    
                    """–®—Ç—É–∫–∞ —Å–Ω–∏–∑—É –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –∑–∞—Ä–∞–∂–µ–Ω–∏–π, –Ω–æ –º–Ω–µ –¥–∏–∫–æ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è, —á—Ç–æ —Ç–µ–ø–µ—Ä—å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø–∏—à–µ—Ç, —á—Ç–æ –∂–µ—Ä—Ç–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (—ç—Ç–æ –ø–∏—à–µ—Ç—Å—è –ø–æ—Ç–æ–º—É, —á—Ç–æ –æ—á–µ–Ω—å –º–∞–ª–æ –∏–≥—Ä–æ–∫–æ–≤)"""
                    # victim = victim if len(lab.get_victums(f"WHERE `victums{lab.user_id}`.`user_id` LIKE '{victim['user_id']}' AND `victums{lab.user_id}`.`from_infect` <= {int(time.time()) - (60*60)}")) != 0 else None # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–¥
                    
                else: victim = None # 10% –Ω–µ—É–¥–∞—á–Ω—ã–π –ø–æ–∏—Å–∫

            if victim == None:
                lab.save()
                del lab
                await message.reply(text=f"üë∫ –ñ–µ—Ä—Ç–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!",  parse_mode="Markdown")
            else:

                attack_chance = random.random() # —Ä–∞–Ω–¥–æ–º –æ—Ç 0 –¥–æ 1
                success = False
                    
                labOfVictim = labs.get_lab(victim['user_id']) # –ª–∞–±–∞ –∂–µ—Ä—Ç–≤—ã

                if labOfVictim.has_lab: # –µ—Å–ª–∏ —É –∂–µ—Ä—Ç–≤—ã –µ—Å—Ç—å –ª–∞–±–∞, —Ç–æ –ø–æ –¥—Ä—É–≥–æ–º—É –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞—Ç—å —à–∞–Ω—Å—ã

                    delta = labOfVictim.immunity - lab.infectiousness # —Ä–∞–∑–Ω–∏—Ü–∞ –∑–∞—Ä–∞–∑–Ω–æ—Å—Ç–∏ –∏ –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞

                    if delta <= 0: #–µ—Å–ª–∏ –∏–º–º—É–Ω –∂–µ—Ä—Ç–≤—ã –º–µ–Ω—å—à–µ/—Ä–∞–≤–Ω–æ –∑–∞—Ä–∞–∑–Ω–æ—Å—Ç–∏ –∞—Ç–∞–∫—É—é—â–µ–≥–æ, —Ç–æ —É—Å–ø–µ—Ö 100%
                        success = True
                        lab.all_operations += 1
                        lab.patogens -= 1
                        pats = 1

                    # elif attempts > 1: # –µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ø—ã—Ç–æ–∫ –∑–∞—Ä–∞–∂–µ–Ω–∏—è, —Å—á–∏—Ç–∞–µ—Ç—Å—è –ø–æ —ç–∫—Å–ø–æ–Ω–µ–Ω—Ç–µ 1/(x^2)
                    #     pats = 0
                    #     for i in range(attempts):
                    #         if lab.patogens <= 0: break
                    #         lab.all_operations += 1
                    #         lab.patogens -= 1
                    #         pats += 1
                    #         success = random.random()
                    #         if success: break

                else:
                    if attempts > 1: # –µ—Å–ª–∏ –ø–æ–ø—ã—Ç–æ–∫ –∑–∞–¥–∞–Ω–æ –±–æ–ª—å—à–µ 1, —Ç–æ –æ–Ω —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —à–∞–Ω—Å –Ω–∞ –ø–æ—Ä–∞–∂–µ–Ω–∏–µ :)
                        pats = 0
                        for i in range(attempts):
                            if lab.patogens <= 0: break
                            lab.all_operations += 1
                            lab.patogens -= 1
                            pats += 1
                            success = random.random() > 0.3
                            if success: break

                    elif attack_chance < 0.2: # 20% —à–∞–Ω—Å –Ω–∞ –Ω–µ—É–¥–∞—á—É –ø—Ä–∏ –∞—Ç–∞–∫–µ, success –æ—Å—Ç–∞–µ—Ç—Å—è False –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                        lab.all_operations += 1
                        lab.patogens -= 1
                        pats = 1
                    else: # –µ—Å–ª–∏ –≤—Å–µ –¥—Ä—É–≥–∏–µ –∏—Ñ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏, —Ç–æ –∑–Ω–∞—á–∏—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–±–∏–ª 
                        success = True
                        lab.all_operations += 1
                        lab.patogens -= 1
                        pats = 1
                if success: # –µ—Å–ª–∏ –ø–æ –≤—Å–µ–º —à–∞–Ω—Å–∞–º –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ, —Ç–æ –∏–¥–µ—Ç –¥–∞–ª—å—à–µ –æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∂–µ—Ä—Ç–≤—É 
                    if labOfVictim.has_lab:

                        labOfVictim.all_issue += 1

                        profit = int(labOfVictim.bio_exp / 10)
                        profit = 1 if profit < 1 else profit # –º–∏–Ω –ø—Ä–æ—Ñ–∏—Ç 1

                        labOfVictim.bio_exp -= int(labOfVictim.bio_exp / 10)
                        labOfVictim.bio_exp = 1 if labOfVictim.bio_exp < 1 else labOfVictim.bio_exp # —á—Ç–æ–±—ã –Ω–µ —É—à–ª–æ –≤ 0 –∏–ª–∏ -

                        labOfVictim.save()

                    else: profit = random.randint(1, 100)

                    lab.save_victum(victim['user_id'], profit)
                    lab.save()

                    text = f"üòé –í—ã –ø–æ–¥–≤–µ—Ä–≥–ª–∏ –∑–∞—Ä–∞–∂–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "
                    text += f"[{victim['name']}](tg://openmessage?user_id={victim['user_id']})\n\n"
                    text += f"üß™ –ó–∞—Ç—Ä–∞—á–µ–Ω–æ –ø–∞—Ç–æ–≥–µ–Ω–æ–≤ `{pats}`.\n"
                    text += f"‚ò†Ô∏è –ó–∞—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ `{lab.mortality}` "      
                    text += await skloneniye(lab.mortality)
                    text += ".\n"
                    text += f"‚ò£Ô∏è `{profit}` –±–∏–æ-–æ–ø—ã—Ç–∞."

                    await message.reply(text=text, parse_mode="Markdown")
                        
                    ''' –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è '''

                    if labOfVictim.has_lab:
                        chat = labOfVictim["virus_chat"]
                        text = ""
                        chance = random.randint(1, 100)

                        if lab.security < labOfVictim.security:

                            if pats > 1:
                                text += f'üë®üèª‚Äçüî¨ –ö–æ—Ä–ø–æ—Ä–∞—Ü–∏—è –¥–æ–∫–ª–∞–¥—ã–≤–∞–µ—Ç: \n\n[{lab["name"]}](tg://openmessage?user_id={lab["user_id"]}) –ø–æ–¥–≤–µ—Ä–≥ –≤–∞—Å –∑–∞—Ä–∞–∂–µ–Ω–∏—é.\n–ë—ã–ª–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ {pats} –ø–æ–ø—ã—Ç–æ–∫ –≤–∞—à–µ–≥–æ –∑–∞—Ä–∞–∂–µ–Ω–∏—è\n\n–ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ç–æ–≥–µ–Ω–∞: `{lab["patogen_name"] if lab["patogen_name"] != None else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}`\n\n_–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ ‚ò£Ô∏è {profit} –æ–ø—ã—Ç–∞_'
                            else:
                                text += f'üë®üèª‚Äçüî¨ –ö–æ—Ä–ø–æ—Ä–∞—Ü–∏—è –¥–æ–∫–ª–∞–¥—ã–≤–∞–µ—Ç: \n\n[{lab["name"]}](tg://openmessage?user_id={lab["user_id"]}) –ø–æ–¥–≤–µ—Ä–≥ –≤–∞—Å –∑–∞—Ä–∞–∂–µ–Ω–∏—é.\n\n–ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ç–æ–≥–µ–Ω–∞: `{lab["patogen_name"] if lab["patogen_name"] != None else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}`\n\n_–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ ‚ò£Ô∏è {profit} –æ–ø—ã—Ç–∞_'
                            
                            await bot.send_message(chat_id=chat, text=text, parse_mode="Markdown")
                            return

                        if lab.security > labOfVictim.security :
                            
                            sp = (lab.infectiousness - labOfVictim.security)**2

                            if chance > sp:
                                
                                if pats > 1:
                                    text += f'üë®üèª‚Äçüî¨ –ö–æ—Ä–ø–æ—Ä–∞—Ü–∏—è –¥–æ–∫–ª–∞–¥—ã–≤–∞–µ—Ç: \n\n[{lab["name"]}](tg://openmessage?user_id={lab["user_id"]}) –ø–æ–¥–≤–µ—Ä–≥ –≤–∞—Å –∑–∞—Ä–∞–∂–µ–Ω–∏—é.\n–ë—ã–ª–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ {pats} –ø–æ–ø—ã—Ç–æ–∫ –≤–∞—à–µ–≥–æ –∑–∞—Ä–∞–∂–µ–Ω–∏—è\n\n–ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ç–æ–≥–µ–Ω–∞: `{lab["patogen_name"] if lab["patogen_name"] != None else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}`\n\n_–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ ‚ò£Ô∏è {profit} –æ–ø—ã—Ç–∞_'
                                else:
                                    text += f'üë®üèª‚Äçüî¨ –ö–æ—Ä–ø–æ—Ä–∞—Ü–∏—è –¥–æ–∫–ª–∞–¥—ã–≤–∞–µ—Ç: \n\n[{lab["name"]}](tg://openmessage?user_id={lab["user_id"]}) –ø–æ–¥–≤–µ—Ä–≥ –≤–∞—Å –∑–∞—Ä–∞–∂–µ–Ω–∏—é.\n\n–ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ç–æ–≥–µ–Ω–∞: `{lab["patogen_name"] if lab["patogen_name"] != None else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}`\n\n_–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ ‚ò£Ô∏è {profit} –æ–ø—ã—Ç–∞_'
                            
                            else:
                                
                                if pats > 1:
                                    text += f'üë®üèª‚Äçüî¨ –ö–æ—Ä–ø–æ—Ä–∞—Ü–∏—è –¥–æ–∫–ª–∞–¥—ã–≤–∞–µ—Ç: \n\n–í–∞—Å –ø—ã—Ç–∞–ª–∏—Å—å –∑–∞—Ä–∞–∑–∏—Ç—å –≤–∏—Ä—É—Å–æ–º –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º `{lab["patogen_name"] if lab["patogen_name"] != None else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}`\n–ë—ã–ª–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ {pats} –ø–æ–ø—ã—Ç–æ–∫ –≤–∞—à–µ–≥–æ –∑–∞—Ä–∞–∂–µ–Ω–∏—è\n\n_–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ ‚ò£Ô∏è {profit} –æ–ø—ã—Ç–∞_'
                                else:
                                    text += f'üë®üèª‚Äçüî¨ –ö–æ—Ä–ø–æ—Ä–∞—Ü–∏—è –¥–æ–∫–ª–∞–¥—ã–≤–∞–µ—Ç: \n\n–í–∞—Å –ø—ã—Ç–∞–ª–∏—Å—å –∑–∞—Ä–∞–∑–∏—Ç—å –≤–∏—Ä—É—Å–æ–º –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º `{lab["patogen_name"] if lab["patogen_name"] != None else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}`\n\n_–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ ‚ò£Ô∏è {profit} –æ–ø—ã—Ç–∞_'
                            
                            
                            await bot.send_message(chat_id=chat, text=text, parse_mode="Markdown")

                else:
                    await message.reply(text=f"üë∫ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞—Ä–∞–∑–∏—Ç—å [{victim['name']}](tg://openmessage?user_id={victim['user_id']}) –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å!\n–í–µ—Ä–æ—è—Ç–Ω–æ —É –≤–∞—à–µ–≥–æ –≤–∏—Ä—É—Å–∞ —Å–ª–∞–±–∞—è –∑–∞—Ä–∞–∑–Ω–æ—Å—Ç—å.",  parse_mode="Markdown")
                    
                    labOfVictim = labs.get_lab(victim['user_id'])
                    if labOfVictim.has_lab:
                        labOfVictim.all_issue += 1
                        labOfVictim.save()

    if message.text.lower() == "–±–∏–æ–ª–∞–±":

        """
            –ö–æ–º–∞–Ω–¥–∞ –≤—ã–≤–æ–¥–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏ —é–∑–µ—Ä–∞
        """

        lab = labs.get_lab(message['from']['id'])
        if not lab.has_lab: 
            lab = labs.create_lab(message['from']['id'])

        # –¥–∞–ª—å—à–µ –ª–∞–±–∞ —Ç–æ—á–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–¥–µ–∂–∏—Ç—Å—è –≤ lab
        """
            –ø–æ–ª–µ                –æ–ø–∏—Å–∞–Ω–∏–µ

            user_id             —é–∑–µ—Ä –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            name                –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_name           —é–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            corp –∫–æ—Ä–ø           –∞–π–¥–∏ –∫–æ—Ä–ø—ã
            patogen_name        –∏–º—è –ø–∞—Ç–æ–≥–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            all_patogens        –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö –ø–∞—Ç–æ–≥–µ–Ω–æ–≤ —É —é–∑–µ—Ä–∞
            patogens            –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø–∞—Ç–æ–≥–µ–Ω–æ–≤ —É —é–∑–µ—Ä–∞
            last_patogen_time   –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–∞—Ç–æ–≥–µ–Ω–∞ (unix –º–µ—Ç–∫–∞)

            qualification       —É—Ä–æ–≤–µ–Ω—å –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏
            infectiousness      —É—Ä–æ–≤–µ–Ω—å –∑–∞—Ä–∞–∑–Ω–æ—Å—Ç–∏
            immunity            —É—Ä–æ–≤–µ–Ω—å –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞
            mortality           —É—Ä–æ–≤–µ–Ω—å –ª–µ—Ç–∞–ª—å–Ω–æ—Å—Ç–∏
            security            —É—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å–∏

            bio_exp             –±–∏–æ –æ–ø—ã—Ç
            bio_res             –±–∏–æ —Ä–µ—Å—É—Ä—Å

            all_operations      –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞—Ä–∞–∂–µ–Ω–∏—è
            suc_operations      –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞—Ä–∞–∂–µ–Ω–∏—è
            all_issue           –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫ –∑–∞—Ä–∞–∑–∏—Ç—å —ç—Ç–æ–≥–æ —é–∑–µ—Ä–∞
            prevented_issue     –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –∑–∞—Ä–∞–∑–∏—Ç—å —ç—Ç–æ–≥–æ —é–∑–µ—Ä–∞
            victims             –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –∂–µ—Ä—Ç–≤
            disease             –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –±–æ–ª–µ–∑–Ω–µ–π
            coins               –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–∏–Ω–æ–≤
            bio_valuta          –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–∫–æ–π –ª–∏–±–æ –≤–∞–ª—é—Ç—ã / –∏—Ä–∏—Å–æ–∫

            last_farma          –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–º–∞–Ω–¥—ã —Ñ–µ—Ä–º–∞
            last_issue          –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞—Ä–∞–∂–µ–Ω–∏—è
            last_daily          –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –µ–∂–∏

            virus_chat          —á–∞—Ç –∞–π–¥–∏, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤–∏—Ä—É—Å—ã (None –µ—Å–ª–∏ –≤ –ª—Å)
        """


        def get_impr_count(start, biores, power): # –ø–æ–¥—Å—á–µ—Ç –∫–æ–ª–≤–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π –ø—Ä–æ–∫–∞—á–∫–∏
            count = 0
            price = 0
            while price <= biores:
                count += 1
                price += floor((int(start) + count) ** power)
            return count - 1
        


        '''  –ù–∞–∑–≤–∞–Ω–∏–µ –≤–∏—Ä—É—Å–∞ '''

        text = f'ü¶† –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∏—Ä—É—Å–µ: `{lab.patogen_name if lab.patogen_name != None else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}`\n\n'

        '''  –í–ª–∞–¥–µ–ª–µ—Ü –ª–∞–±—ã '''
        owner_link = f'https://t.me/{lab.user_name}' if lab.user_name != None else f'tg://openmessage?user_id={lab.user_id}'
        text += f'üë∫ –í–ª–∞–¥–µ–ª–µ—Ü: [{lab.name}]({owner_link})\n'

        ''' –ö–æ—Ä–ø–æ—Ä–∞—Ü–∏—è '''
        if lab.corp != None: text += f'üè¢ –û—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏: [{lab.corp_name}](tg://openmessage?user_id={lab.corp_owner_id})\n\n'
        else: text += f'\n'
        
        ''' –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ç–æ–≥–µ–Ω–æ–≤ ''' 
        text += f'üß™ –ü–∞—Ç–æ–≥–µ–Ω–æ–≤: {lab.patogens} –∏–∑ {lab.all_patogens} (`+{get_impr_count(lab.all_patogens, lab.bio_res, 2)}`)\n'

        ''' –£—Ä–æ–≤–µ–Ω—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ '''  
        if lab.qualification < 60: 
            qualification_count = get_impr_count(lab.qualification, lab.bio_res, 2.6)
            qualification_count = qualification_count if qualification_count + lab.qualification <= 60 else lab.qualification - qualification_count
            text += f'üë®üèª‚Äçüî¨ –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞: {lab.qualification} (`{61 - lab.qualification} –º–∏–Ω.` | `+{qualification_count}`) \n\n'
        else: text += f'üë®üèª‚Äçüî¨ –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞: {lab.qualification} (`1 –º–∏–Ω.`) \n\n'
        
        ''' –ù–∞–≤—ã–∫–∏ '''
        text += f'üî¨ **–ù–ê–í–´–ö–ò:**\n'
        text += f'ü¶† –ó–∞—Ä–∞–∑–Ω–æ—Å—Ç—å: {lab.infectiousness} —É—Ä. (`+{get_impr_count(lab.infectiousness, lab.bio_res, 2.5)}`)\n'
        text += f'üõ° –ò–º–º—É–Ω–∏—Ç–µ—Ç: {lab.immunity} —É—Ä. (`+{get_impr_count(lab.immunity, lab.bio_res, 2.45)}`)\n'
        text += f'‚ò†Ô∏è –õ–µ—Ç–∞–ª—å–Ω–æ—Å—Ç—å: {lab.mortality} —É—Ä. (`+{get_impr_count(lab.mortality, lab.bio_res, 1.95)}`)\n'
        text += f'üïµÔ∏è‚Äç‚ôÇÔ∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: {lab.security} —É—Ä. (`+{get_impr_count(lab.security, lab.bio_res, 2.1)}`)\n\n'

        ''' –î–∞–Ω–Ω—ã–µ ''' 
        text += f'‚õ© **–î–ê–ù–ù–´–ï:**\n'
        text += f'‚ò£Ô∏è –ë–∏–æ-–æ–ø—ã—Ç: {strconv.num_to_str(lab.bio_exp)}\n'
        text += f'üß¨ –ë–∏–æ-—Ä–µ—Å—É—Ä—Å: {strconv.num_to_str(lab.bio_res)}\n'

        text += f'üò∑ –°–ø–µ—Ü–æ–ø–µ—Ä–∞—Ü–∏–π: {lab.suc_operations}/{lab.all_operations} (`{round(100 * int(lab.suc_operations) / int(lab.all_operations if lab.all_operations != 0 else 1))}%`)\n'
        text += f'ü•Ω –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω—ã: {lab.prevented_issue}/{lab.all_issue} (`{round(100* int(lab.prevented_issue) / int(lab.all_issue if lab.all_issue != 0 else 1))}%`)\n\n'

        await bot.send_message(chat_id=message.chat.id, 
            text=text, 
            reply_to_message_id=message.message_id, 
            parse_mode="Markdown",
            disable_web_page_preview=True
        )

        lab.save() 

    if message.text.lower() == "–±–∏–æ":
        await message.reply(f"*–ë–æ—Ç –Ω–∞ –º–µ—Å—Ç–µ*", parse_mode='Markdown')


    if message.text.lower().startswith("+–≤–∏—Ä—É—Å "):

        lab = labs.get_lab(message['from']['id'])
        if lab.has_lab: 
            patName = message.text[7::].strip()

            if len(patName) > 50:
                await message.reply("–î–ª–∏–Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –≤–∏—Ä—É—Å–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 50 —Å–∏–º–≤–æ–ª–æ–≤")
                return
            if len(patName) == 0:
                await message.reply("–í–∏—Ä—É—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
                return
            if re.fullmatch(r"([a-zA-Z–∞-—è–ê-–Ø0-9_\s,.!?]*)", patName) == None: # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∏–º–µ–Ω–∏ –ø–∞—Ç–æ–≥–µ–Ω–∞
                await message.reply("–í –≤–∏—Ä—É—Å–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤!")
                return

            lab.patogen_name = patName
            lab.save()

            await message.reply("‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ç–æ–≥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")

    if message.text.lower() in ("–±–∏–æ–∂–µ—Ä—Ç–≤—ã", "–±–∏–æ–µ–∂–∞"):
        lab = labs.get_lab(message['from']['id'])
        text = f'–ñ–µ—Ä—Ç–≤—ã –∏–≥—Ä–æ–∫–∞ [{message.from_user.first_name}](tg://openmessage?user_id={message.from_user.id})\n\n'
        profit = 0

        count = 0
        for item in list(reversed(lab.get_victums())):
            if item['until_infect'] > int(time.time()):
                profit += item["profit"]
                name = strconv.deEmojify(item["name"])
                until = datetime.datetime.fromtimestamp(item['until_infect']).strftime("%d.%m.%Y")
                text += f'{count + 1}. [{strconv.escape_markdown(name)}](tg://openmessage?user_id={item["user_id"]}) | _+{item["profit"]}_ | –¥–æ {until}\n'

                count += 1
                if count == 50: break
        
        text += f'\n*–û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å:* _+{profit} –±–∏–æ-—Ä–µ—Å—É—Ä—Å–æ–≤ üß¨_'

        await message.reply(text=text, parse_mode="Markdown")

    if message.text.lower() in ("–±–∏–æ—Ñ–µ—Ä–º–∞", "–±–∏–æ—Ñ–∞—Ä–º–∞", "–±–∏–æ—Ñ–∞", "–º–∞–π–Ω"):
        
        lab = labs.get_lab(message['from']['id'])
        profit = random.randint(20, 200)

        lab.coins += profit
        lab.save()

        text = f'–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ—Ñ–∞—Ä–º–∏–ª–∏ –∏ –ø–æ–ª—É—á–∏–ª–∏ {profit} –∫–æ–∏–Ω–æ–≤ üí∞!'

        await message.reply(text=text, parse_mode="Markdown")

    if message.text.lower() in ("–±–∏–æ–º–µ—à", "–±–∏–æ–º–µ—à–æ–∫", "–±–∏–æ–±–∞–ª–∞–Ω—Å", "–∫–æ–∏–Ω—ã"):

        lab = labs.get_lab(message['from']['id'])

        text = f'–ú–µ—à–æ–∫ –∏–≥—Ä–æ–∫–∞ [{message.from_user.first_name}](tg://openmessage?user_id={message.from_user.id})\n\n'\
               f'–ö–æ–∏–Ω—ã: _{lab.coins}_ üí∞\n' \
               f'–ë–∏–æ-–∫–æ–∏–Ω—ã: _{lab.bio_valuta}_ ü•ë'

        await message.reply(text=text, parse_mode="Markdown")

    
    if message.text.lower() == "–±–∏–æ—Ö–µ–ª–ø":
        await message.reply(f"[–í—Å–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞](https://telegra.ph/Komandy-dlya-igry-v-Bio-CHma-09-15-2)", parse_mode="Markdown")





@dp.edited_message_handler()
async def other(message):
    save_message(message)