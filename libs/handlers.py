import os
import shutil
from app import dp, bot, query
from config import MYSQL_HOST

from Labs import Labs
import asyncio
import requests

from aiogram import Bot, types
from aiogram.types import ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, InputFile
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor


work_path = os.path.abspath(os.curdir)
labs = Labs()
if requests.get('https://ip.beget.ru/').text.replace(' ', '').replace('\n', '') == MYSQL_HOST: # –ù–µ–æ–±—Ö–æ–¥–∏–º–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ /git –∏ /restar —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥–µ
    @dp.message_handler(commands=["git"])
    async def handler(message: types.message):
        if message['from']['id'] not in [780882761, 1058211493]: return

        os.system("git pull https://github.com/kawasaji/BioAttacker")
        await message.reply("ü™õ –ö–æ–º–∞–Ω–¥–∞ –Ω–∞ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–∏—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
        await message.reply("ü™õ –†–µ—Å—Ç–∞—Ä—Ç –±–æ—Ç–∞")

        dp.stop_polling()
        await dp.wait_closed()
        await bot.close()


        os.system(f"python {work_path}/app.py &")
        exit()

    @dp.message_handler(commands=["restart"])
    async def handler(message: types.message):
        if message['from']['id'] not in [780882761, 1058211493]: return

        await message.reply("ü™õ –†–µ—Å—Ç–∞—Ä—Ç –±–æ—Ç–∞")

        dp.stop_polling()
        await dp.wait_closed()
        await bot.close()


        os.system(f"python {work_path}/app.py &")
        exit()

@dp.message_handler(commands=["export", "exp"])
async def handler(message: types.message):
    """
        –≠–∫—Å–ø–æ—Ä—Ç —Ñ–∞–π–ª–æ–≤ –∏–∑ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ /export <–ø—É—Ç—å –∫ —Ñ–∞–π–ª—É>
        –ü—Ä–æ—Å—Ç–æ /export —Å–æ–∑–¥–∞–µ—Ç –∞—Ä—Ö–∏–≤ –≤—Å–µ–≥–æ –±–æ—Ç–∞
    """
    if message['from']['id'] not in [780882761, 1058211493]: return
    message.text = message.text.split(" ")
    message.text.pop(0)
    message.text = ' '.join(message.text).replace("\\", "/").replace(" ", "")
    if message.text == '' or message.text == '/':
        print(message)
        await bot.send_document(message.chat.id,  InputFile(shutil.make_archive("files", 'zip', work_path), filename='BioAttacker.zip'))
        os.remove(work_path + "/files.zip")
    else:
        if not message.text.startswith('/'): message.text = "/" + message.text
        if os.path.exists(work_path + message.text):
            if not os.path.isfile(work_path + message.text):
                await bot.send_document(message.chat.id,  InputFile(shutil.make_archive("files", 'zip', work_path + message.text),  filename=message.text + ".zip"))
                os.remove(work_path + "/files.zip")
            else:
                await bot.send_document(message.chat.id,  InputFile(work_path + message.text, filename=message.text))
        else: await message.reply(f"ü™õ –ü—É—Ç—å `{message.text}` –Ω–µ –Ω–∞–π–¥–µ–Ω")


@dp.message_handler(content_types=['text']) 
async def handler(message: types.message):
    if message.text == "–±–∏–æ–µ–±":
        """
            –ö–æ–º–∞–Ω–¥–∞ –∑–∞—Ä–∞–∂–µ–Ω–∏—è
        """
        if message['from']['id'] in labs.has_lab_users:
            ran_user = labs.get_random_victum()
            await message.reply(text=f"{ran_user['user_id']}, {ran_user['name']}")
            # labs.save_victum(message['from']['id'], 2563739, 100)

    if message.text == "–±–∏–æ–ª–∞–±":

        """
            –ö–æ–º–∞–Ω–¥–∞ –≤—ã–≤–æ–¥–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏ —é–∑–µ—Ä–∞
        """

        lab = labs.get_lab(message['from']['id']) # –í–µ—Ä–Ω–µ—Ç None, –µ—Å–ª–∏ –ª–∞–±–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
        if lab == None: lab = labs.create_lab(message['from']['id'])

        # –¥–∞–ª—å—à–µ –ª–∞–±–∞ —Ç–æ—á–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–¥–µ–∂–∏—Ç—Å—è –≤ lab
        """
            –ø–æ–ª–µ                –æ–ø–∏—Å–∞–Ω–∏–µ

            user_id             —é–∑–µ—Ä –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            name                –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_name           —é–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            corp –∫–æ—Ä–ø           –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            patogen_name        –∏–º—è –ø–∞—Ç–æ–≥–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            all_patogens        –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö –ø–∞—Ç–æ–≥–µ–Ω–æ–≤ —É —é–∑–µ—Ä–∞
            patogens            –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø–∞—Ç–æ–≥–µ–Ω–æ–≤ —É —é–∑–µ—Ä–∞
            last_patogen_time   –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–∞—Ç–æ–≥–µ–Ω–∞ (unix –º–µ—Ç–∫–∞)

            qualification       —É—Ä–æ–≤–µ–Ω—å –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏
            infectiousness      —É—Ä–æ–≤–µ–Ω—å –∑–∞—Ä–∞–∑–Ω–æ—Å—Ç–∏
            immunity —É—Ä–æ–≤–µ–Ω—å    –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞
            mortality —É—Ä–æ–≤–µ–Ω—å   –ª–µ—Ç–∞–ª—å–Ω–æ—Å—Ç–∏
            security —É—Ä–æ–≤–µ–Ω—å    –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å–∏

            bio_exp             –±–∏–æ –æ–ø—ã—Ç
            bio_res             –±–∏–æ —Ä–µ—Å—É—Ä—Å

            all_operations      –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞—Ä–∞–∂–µ–Ω–∏—è
            suc_operations      –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞—Ä–∞–∂–µ–Ω–∏—è
            all_issue           –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫ –∑–∞—Ä–∞–∑–∏—Ç—å —ç—Ç–æ–≥–æ —é–∑–µ—Ä–∞
            prevented_issue     –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –∑–∞—Ä–∞–∑–∏—Ç—å —ç—Ç–æ–≥–æ —é–∑–µ—Ä–∞
            victims             –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –∂–µ—Ä—Ç–≤
            disease             –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –±–æ–ª–µ–∑–Ω–µ–π
            coins               –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–∏–Ω–æ–≤
            bio_valuta          –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–∫–æ–π –ª–∏–±–æ –≤–∞–ª—é—Ç—ã / –∏—Ä–∏—Å–æ–∫

            last_farma          –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–º–∞–Ω–¥—ã —Ñ–µ—Ä–º–∞
            last_issue          –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞—Ä–∞–∂–µ–Ω–∏—è
        """
        print(lab)
        lab.save() 

        

