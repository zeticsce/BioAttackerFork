import os
import shutil
import asyncio
import requests
import random
import subprocess
import sys
import datetime


from app import dp, bot, query, strconv
from config import MYSQL_HOST
from Labs import Labs

from aiogram import Bot, types
from aiogram.types import ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, InputFile
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor


work_path = os.path.abspath(os.curdir)
labs = Labs()


if requests.get('https://ip.beget.ru/').text.replace(' ', '').replace('\n', '') == MYSQL_HOST: # –ù–µ–æ–±—Ö–æ–¥–∏–º–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ /git –∏ /restar —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥–µ
    @dp.message_handler(commands=["git"])
    async def handler(message: types.message):
        if message['from']['id'] not in [780882761, 1058211493]: return

        git_message = await message.reply("ü™õ *–û–∂–∏–¥–∞–µ–º –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...*", parse_mode="Markdown")

        pull_result = subprocess.Popen(["git", "pull", "/home/bots/BioAttacker/"], stdout=subprocess.PIPE, text=True, stderr=subprocess.PIPE)
        output, errors = pull_result.communicate(input="Hello from the other side!")
        pull_result.wait()
        await bot.edit_message_text(f"ü™õ *–û–∂–∏–¥–∞–µ–º –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...\n–†–µ–∑—É–ª—å—Ç–∞—Ç:*\n`{output}`", git_message.chat.id, git_message.message_id, parse_mode="Markdown")
        await message.reply(f"*–í—ã—Ö–æ–¥!* _(‚è∞{datetime.datetime.now().strftime('%d.%m.%Y %H:%M:%S')})_", parse_mode="Markdown")

        dp.stop_polling()
        await dp.wait_closed()
        await bot.close()
        
        """–ò–ó–ú–ï–ù–ï–ù–ò–Ø –°–£–©–ï–°–¢–í–£–Æ–¢"""

        os.system(f"python {work_path}/app.py &")
    @dp.message_handler(commands=["restart"])
    async def handler(message: types.message):
        if message['from']['id'] not in [780882761, 1058211493]: return

        await message.reply("ü™õ –†–µ—Å—Ç–∞—Ä—Ç –±–æ—Ç–∞")

        dp.stop_polling()
        await dp.wait_closed()
        await bot.close()


        os.system(f"python {work_path}/app.py &")
        sys.exit(0)

@dp.message_handler(commands=["exit"], commands_prefix='.')
async def hi_there(message: types.message):
    if message['from']['id'] not in [780882761, 1058211493]: return
    await message.reply(f"*–í—ã—Ö–æ–¥!* _(‚è∞{datetime.datetime.now().strftime('%d.%m.%Y %H:%M:%S')})_", parse_mode="Markdown")
    sys.exit(0)

@dp.message_handler(commands=["start"], commands_prefix='!/.')
async def hi_there(message: types.message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! *** –ø—Ä–∏–¥—É–º–∞—Ç—å —Ç–µ–∫—Å—Ç ***")


@dp.message_handler(commands=["export", "exp"], commands_prefix='!/.')
async def handler(message: types.message):
    """
        –≠–∫—Å–ø–æ—Ä—Ç —Ñ–∞–π–ª–æ–≤ –∏–∑ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ /export <–ø—É—Ç—å –∫ —Ñ–∞–π–ª—É>
        –ü—Ä–æ—Å—Ç–æ /export —Å–æ–∑–¥–∞–µ—Ç –∞—Ä—Ö–∏–≤ –≤—Å–µ–≥–æ –±–æ—Ç–∞
    """
    if message['from']['id'] not in [780882761, 1058211493]: return
    message.text = message.text.split(" ")
    message.text.pop(0)
    message.text = ' '.join(message.text).replace("\\", "/").replace(" ", "")
    if message.text == '' or message.text == '/':
        print(message)
        await bot.send_document(message.chat.id,  InputFile(shutil.make_archive("files", 'zip', work_path), filename='BioAttacker.zip'))
        os.remove(work_path + "/files.zip")
    else:
        if not message.text.startswith('/'): message.text = "/" + message.text
        if os.path.exists(work_path + message.text):
            if not os.path.isfile(work_path + message.text):
                await bot.send_document(message.chat.id,  InputFile(shutil.make_archive("files", 'zip', work_path + message.text),  filename=message.text + ".zip"))
                os.remove(work_path + "/files.zip")
            else:
                await bot.send_document(message.chat.id,  InputFile(work_path + message.text, filename=message.text))
        else: await message.reply(f"ü™õ –ü—É—Ç—å `{message.text}` –Ω–µ –Ω–∞–π–¥–µ–Ω")


@dp.message_handler(content_types=['text']) 
async def handler(message: types.message):
    if "–±–∏–æ–µ–±" in message.text.lower().split(" ")[0]:
        
        """
                –ö–æ–º–∞–Ω–¥–∞ –∑–∞—Ä–∞–∂–µ–Ω–∏—è
        """
        
        if len(message.text.split(" ")) == 1:
            
            lab = labs.get_lab(message['from']['id'])
            if lab.has_lab: 
                if lab.patogens > 0:
                    import chances
                    '''
                        casual - —Å–ª—É—á–∞–π–Ω—ã–π —é–∑–µ—Ä
                        victim - –∂–µ—Ä—Ç–≤–∞
                        bioattacker - –∏–≥—Ä–æ–∫

                    '''
                    karma = ("casual", "victim")
                    
                    random_choice = random.choice(karma)
                    ran_user = int()

                    if random_choice == "casual":
                        ran_user = labs.get_random_victum()

                    elif random_choice == "victim":
                        ran_user = lab.get_victums(params="ORDER BY RAND() LIMIT 1")[0]

                    else:
                        pass

                    chance = chances.get_chance()

                    if chance == 1:

                        lab.all_operations += 1
                        lab.patogens -= 1

                        lab.save()
                        await message.reply(text=f"üë∫ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞—Ä–∞–∑–∏—Ç—å [{ran_user['name']}](tg://openmessage?user_id={ran_user['user_id']}) –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å!\n–í–µ—Ä–æ—è—Ç–Ω–æ —É –≤–∞—à–µ–≥–æ –≤–∏—Ä—É—Å–∞ —Å–ª–∞–±–∞—è –∑–∞—Ä–∞–∑–Ω–æ—Å—Ç—å.",  parse_mode="Markdown")
                    
                    else:
                        profit = random.randrange(1, 100)
                        lab.save_victum(ran_user['user_id'], profit)
                        lab.all_operations += 1
                        lab.patogens -= 1

                        lab.save()

                        await message.reply(text=f"üòé –í—ã –ø–æ–¥–≤–µ—Ä–≥–ª–∏ –∑–∞—Ä–∞–∂–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [{ran_user['name']}](tg://openmessage?user_id={ran_user['user_id']})\n–ò –ø–æ–ª—É—á–∏–ª–∏ –∑–∞ —ç—Ç–æ {profit} ‚ò£Ô∏è", parse_mode="Markdown")
                
                else: await message.reply(text=f"üß™ –£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞—Ç–æ–≥–µ–Ω–æ–≤!", parse_mode="Markdown")
            
        elif len(message.text.split(" ")) == 2:
            ''' –±–∏–æ–µ–± @username or @user_id '''

            lab = labs.get_lab(message['from']['id'])

            if lab.patogens > 0:
                
                import chances
                
                ran_user = int()

                text_message = message.text.split(" ")
                # await message.reply(str(text_message))

                if text_message[1][0] == "@":
                    ran_user = labs.get_user(text_message[1][1::])
                
                else:
                    ran_user = labs.get_user(text_message[1])

                
                ''' –ï—Å–ª–∏ —é–∑–µ—Ä —Å—É—â–µ—Å—Ç–≤—É–µ—Ç '''
                if str(ran_user).lower() not in ("none", "null"):
                    
                    
                    chance = chance = chances.get_chance()
                    if chance == 1:

                        lab.all_operations += 1
                        lab.patogens -= 1

                        lab.save()
                        await message.reply(text=f"üë∫ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞—Ä–∞–∑–∏—Ç—å [{ran_user['name']}](tg://openmessage?user_id={ran_user['user_id']}) –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å!\n–í–µ—Ä–æ—è—Ç–Ω–æ —É –≤–∞—à–µ–≥–æ –≤–∏—Ä—É—Å–∞ —Å–ª–∞–±–∞—è –∑–∞—Ä–∞–∑–Ω–æ—Å—Ç—å.",  parse_mode="Markdown")
                    else:
                        profit = random.randrange(1, 100)
                        lab.save_victum(ran_user['user_id'], profit)
                        lab.all_operations += 1
                        lab.patogens -= 1

                        lab.save()
                        await message.reply(text=f"üòé –í—ã –ø–æ–¥–≤–µ—Ä–≥–ª–∏ –∑–∞—Ä–∞–∂–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [{ran_user['name']}](tg://openmessage?user_id={ran_user['user_id']})\n–ò –ø–æ–ª—É—á–∏–ª–∏ –∑–∞ —ç—Ç–æ {profit} ‚ò£Ô∏è", parse_mode="Markdown")

                else:
                    await message.reply("–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")

            else: await message.reply(text=f"üß™ –£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞—Ç–æ–≥–µ–Ω–æ–≤!", parse_mode="Markdown")

        elif len(message.text.split(" ")) == 3:

            ''' –±–∏–æ–µ–± (@user_id) (attempts) '''

            lab = labs.get_lab(message['from']['id'])

            if lab.patogens > 0:
                ran_user = int()

                text_message = message.text.split(" ")
                # await message.reply(str(text_message))

                if text_message[1][0] == "@":
                    ran_user = labs.get_user(text_message[1][1::])
                
                else:
                    ran_user = labs.get_user(text_message[1])
            
                if str(ran_user).lower() not in ("none", "null"):
                    
                    if int(text_message[2]) > 10:
                        await message.reply("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –∑–∞ —Ä–∞–∑ ‚Äî 10")

                    else:
                        
                        import chances

                        for i in range(int(text_message[2])):
                            chance = chances.get_chance(params=1)

                            if chance == 1:
                                lab.patogens -= 1
                                lab.all_operations += 1
                                lab.save()
                            else:
                                profit = random.randrange(1, 100)
                                lab.save_victum(ran_user['user_id'], profit)
                                lab.all_operations += 1
                                lab.patogens -= 1

                                lab.save()
                                
                                await message.reply(text=f"üòé –í—ã –ø–æ–¥–≤–µ—Ä–≥–ª–∏ –∑–∞—Ä–∞–∂–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [{ran_user['name']}](tg://openmessage?user_id={ran_user['user_id']}) c {i + 1} –ø–æ–ø—ã—Ç–∫–∏!\n–ò –ø–æ–ª—É—á–∏–ª–∏ –∑–∞ —ç—Ç–æ {profit} ‚ò£Ô∏è", parse_mode="Markdown")

                                break

                else:
                    await message.reply("–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
            
            else: await message.reply(text=f"üß™ –£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞—Ç–æ–≥–µ–Ω–æ–≤!", parse_mode="Markdown")

    if message.text == "–±–∏–æ–ª–∞–±":

        """
            –ö–æ–º–∞–Ω–¥–∞ –≤—ã–≤–æ–¥–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏ —é–∑–µ—Ä–∞
        """

        lab = labs.get_lab(message['from']['id'])
        if not lab.has_lab: 
            lab = labs.create_lab(message['from']['id'])

        # –¥–∞–ª—å—à–µ –ª–∞–±–∞ —Ç–æ—á–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–¥–µ–∂–∏—Ç—Å—è –≤ lab
        """
            –ø–æ–ª–µ                –æ–ø–∏—Å–∞–Ω–∏–µ

            user_id             —é–∑–µ—Ä –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            name                –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_name           —é–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            corp –∫–æ—Ä–ø           –∞–π–¥–∏ –∫–æ—Ä–ø—ã
            patogen_name        –∏–º—è –ø–∞—Ç–æ–≥–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            all_patogens        –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö –ø–∞—Ç–æ–≥–µ–Ω–æ–≤ —É —é–∑–µ—Ä–∞
            patogens            –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø–∞—Ç–æ–≥–µ–Ω–æ–≤ —É —é–∑–µ—Ä–∞
            last_patogen_time   –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–∞—Ç–æ–≥–µ–Ω–∞ (unix –º–µ—Ç–∫–∞)

            qualification       —É—Ä–æ–≤–µ–Ω—å –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏
            infectiousness      —É—Ä–æ–≤–µ–Ω—å –∑–∞—Ä–∞–∑–Ω–æ—Å—Ç–∏
            immunity —É—Ä–æ–≤–µ–Ω—å    –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞
            mortality —É—Ä–æ–≤–µ–Ω—å   –ª–µ—Ç–∞–ª—å–Ω–æ—Å—Ç–∏
            security —É—Ä–æ–≤–µ–Ω—å    –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å–∏

            bio_exp             –±–∏–æ –æ–ø—ã—Ç
            bio_res             –±–∏–æ —Ä–µ—Å—É—Ä—Å

            all_operations      –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞—Ä–∞–∂–µ–Ω–∏—è
            suc_operations      –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞—Ä–∞–∂–µ–Ω–∏—è
            all_issue           –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫ –∑–∞—Ä–∞–∑–∏—Ç—å —ç—Ç–æ–≥–æ —é–∑–µ—Ä–∞
            prevented_issue     –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –∑–∞—Ä–∞–∑–∏—Ç—å —ç—Ç–æ–≥–æ —é–∑–µ—Ä–∞
            victims             –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –∂–µ—Ä—Ç–≤
            disease             –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –±–æ–ª–µ–∑–Ω–µ–π
            coins               –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–∏–Ω–æ–≤
            bio_valuta          –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–∫–æ–π –ª–∏–±–æ –≤–∞–ª—é—Ç—ã / –∏—Ä–∏—Å–æ–∫

            last_farma          –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–º–∞–Ω–¥—ã —Ñ–µ—Ä–º–∞
            last_issue          –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞—Ä–∞–∂–µ–Ω–∏—è
        """

        '''  –ù–∞–∑–≤–∞–Ω–∏–µ –≤–∏—Ä—É—Å–∞ '''
        text = f'ü¶† –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∏—Ä—É—Å–µ: {lab.patogen_name if lab.patogen_name != None else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}\n\n'

        '''  –í–ª–∞–¥–µ–ª–µ—Ü –ª–∞–±—ã '''
        owner_link = f'https://t.me/{lab.user_name}' if lab.user_name != None else f'tg://openmessage?user_id={lab.user_id}'
        text += f'üë∫ –í–ª–∞–¥–µ–ª–µ—Ü: [{lab.name}]({owner_link})\n'

        ''' –ö–æ—Ä–ø–æ—Ä–∞—Ü–∏—è '''
        if lab.corp != None: text += f'üè¢ –û—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏: [{lab.corp_name}](tg://openmessage?user_id={lab.corp_owner_id})\n\n'
        else: text += f'\n'
        
        ''' –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ç–æ–≥–µ–Ω–æ–≤ ''' 
        text += f'üß™ –î–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–∞—Ç–æ–≥–µ–Ω–æ–≤: {lab.patogens} –∏–∑ {lab.all_patogens}\n'

        ''' –£—Ä–æ–≤–µ–Ω—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ '''  
        text += f'üë®üèª‚Äçüî¨ –£—Ä–æ–≤–µ–Ω—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: {lab.qualification} (–≤—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö)\n\n'
        
        ''' –ù–∞–≤—ã–∫–∏ '''
        text += f'üî¨ **–ù–ê–í–´–ö–ò:**\n'
        text += f'ü¶† –ó–∞—Ä–∞–∑–Ω–æ—Å—Ç—å: {lab.infectiousness} —É—Ä.\n'
        text += f'üõ° –ò–º–º—É–Ω–∏—Ç–µ—Ç: {lab.immunity} —É—Ä.\n'
        text += f'‚ò†Ô∏è –õ–µ—Ç–∞–ª—å–Ω–æ—Å—Ç—å: {lab.mortality} —É—Ä.\n'
        text += f'üïµÔ∏è‚Äç‚ôÇÔ∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: {lab.security} —É—Ä.\n\n'

        ''' –î–∞–Ω–Ω—ã–µ ''' 
        text += f'‚õ© **–î–ê–ù–ù–´–ï:**\n'
        text += f'‚ò£Ô∏è –ë–∏–æ-–æ–ø—ã—Ç: {strconv.num_to_str(lab.bio_exp)}\n'
        text += f'üß¨ –ë–∏–æ-—Ä–µ—Å—É—Ä—Å: {strconv.num_to_str(lab.bio_res)}\n'
        text += f'üò∑ –°–ø–µ—Ü–æ–ø–µ—Ä–∞—Ü–∏–π: {lab.suc_operations}/{lab.all_operations}\n'
        text += f'ü•Ω –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω—ã: {lab.prevented_issue}/{lab.all_issue}\n\n'


        await bot.send_message(chat_id=message.chat.id, 
            text=text, 
            reply_to_message_id=message.message_id, 
            parse_mode="Markdown",
            disable_web_page_preview=True
        )

        lab.save() 

        

