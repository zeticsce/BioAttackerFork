'''

–ú–æ–¥—É–ª—å —Å –ø—Ä–æ–∫–∞—á–∫–∞–º–∏ –ª–∞–±

'''



import os
import shutil
import asyncio
import requests
import random
import subprocess
import sys
import datetime
import re
import time
import math

from app import dp, bot, query, strconv, save_message, is_host
from config import MYSQL_HOST
from Labs import Labs
import calculate

from aiogram import Bot, types
from aiogram.types import ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, InputFile
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor

from math import ceil, floor

work_path = os.path.abspath(os.curdir)
labs = Labs()

@dp.message_handler(content_types=['text'])
async def improve(message: types.Message):
    save_message(message)
    lab = labs.get_lab(message['from']['id'])



    ''' –ü–†–û–ö–ê–ß–ö–ê –ü–ê–¢–û–ì–ï–ù–û–í '''

    if message.text.lower().startswith("+–ø–∞—Ç ") or message.text.lower().startswith("+–ø–∞—Ç–æ–≥–µ–Ω "):
        if lab.has_lab:  
            msg = message.text.lower().split(" ")
            text = "üî¨ _–ú–µ–Ω—é –ø—Ä–æ–∫–∞—á–∫–∏ —É—Ä–æ–≤–Ω–µ–π_\n\n"
            current_patogens = lab.all_patogens

            if len(msg) == 2:
                if msg[1].isdigit():
                    level = int(msg[1])

                    if level <= 0:
                        await message.reply("–ß—É–≤–∞–∫)")
                        return

                    if level > 5:
                        await message.reply("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: `5`", parse_mode="Markdown")
                        return
                    total_cost = calculate.pt(current_patogens, (current_patogens+level))
                    total_cost = str('{0:,}'.format(total_cost).replace(',', ' '))
                    text += f"–í–∞—à —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –ø–∞—Ç–æ–≥–µ–Ω–∞: `{current_patogens}` üß™\n"
                    text += f"–£–ª—É—á—à–µ–Ω–∏–µ –Ω–∞ _+{level}_ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å: "
                    text += f"`{total_cost}` üß¨\n\n"
                    text += f"*–ß—Ç–æ–±—ã –ø–æ–¥–≤–µ—Ä–¥–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ –Ω–∞–ø–∏—à–∏—Ç–µ:* `++–ø–∞—Ç–æ–≥–µ–Ω {level}`"

                    await message.reply(text=text, parse_mode="Markdown")
                
                else:
                    await message.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.")
                    return 

            else:
                await message.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.")
                return  
        else:
            await message.reply(text=f"{message.from_user.first_name}, " \
                                f"—É –≤–∞—Å –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ –ª–∞–±–æ—Ä–æ—Ç–æ—Ä–∏—è!\n\n"\
                                f"–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É `–±–∏–æ–ª–∞–±` —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –µ—ë",
                                parse_mode="Markdown")
            
            return

    elif message.text.lower().startswith("++–ø–∞—Ç ") or message.text.lower().startswith("++–ø–∞—Ç–æ–≥–µ–Ω "):
        if lab.has_lab:  
            msg = message.text.lower().split(" ")
            text = "üî¨ _–ú–µ–Ω—é –ø—Ä–æ–∫–∞—á–∫–∏ —É—Ä–æ–≤–Ω–µ–π_\n\n"
            current_patogens = lab.all_patogens

            if len(msg) == 2:
                if msg[1].isdigit():
                    level = int(msg[1])

                    if level <= 0:
                        await message.reply("–ß—É–≤–∞–∫)")
                        return

                    if level > 5:
                        await message.reply("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: `5`", parse_mode="Markdown")
                        return

                    current_balance = lab.bio_res
                    total_cost = calculate.pt(current_patogens, (current_patogens+level))
                    if current_balance < total_cost:
                        await message.reply("*–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∏–æ-—Ä–µ—Å—É—Ä—Å–æ–≤!*", parse_mode="Markdown")

                    else:
                        lab.bio_res -= total_cost
                        lab.all_patogens += level
                        lab.patogens += level
                        lab.save()
                        total_cost = str('{0:,}'.format(total_cost).replace(',', ' '))
                        text += f"–í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ `{level}` –ø–∞—Ç–æ–≥–µ–Ω–æ–≤!\n"
                        text += f"–° –±–∞–ª–∞–Ω—Å–∞ —Å–Ω—è—Ç–æ `{total_cost}` –±–∏–æ-—Ä–µ—Å—É—Ä—Å–æ–≤ üß¨"
                        await message.reply(text=text, parse_mode="Markdown")
                
                else:
                    await message.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.")
                    return 

            else:
                await message.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.")
                return  

        else:
            await message.reply(text=f"{message.from_user.first_name}, " \
                                f"—É –≤–∞—Å –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ –ª–∞–±–æ—Ä–æ—Ç–æ—Ä–∏—è!\n\n"\
                                f"–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É `–±–∏–æ–ª–∞–±` —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –µ—ë",
                                parse_mode="Markdown")
            
            return

    ''' –ü–†–û–ö–ê–ß–ö–ê –ö–í–ê–õ–ò–§–ò–ö–ê–¶–ò–ò '''
    
    if message.text.lower().startswith("+–∫–≤–∞–ª–∞ ") or message.text.lower().startswith("+–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è "):
        if lab.has_lab:  
            msg = message.text.lower().split(" ")
            text = "üî¨ _–ú–µ–Ω—é –ø—Ä–æ–∫–∞—á–∫–∏ —É—Ä–æ–≤–Ω–µ–π_\n\n"
            current_qualification = lab.qualification

            if current_qualification == 60:
                await message.reply("–£ –≤–∞—Å –∏ —Ç–∞–∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏ -_-")
                return 

            if len(msg) == 2:
                if msg[1].isdigit():
                    level = int(msg[1])

                    if level <= 0:
                        await message.reply("–ß—É–≤–∞–∫)")
                        return

                    if current_qualification + level > 60:
                        await message.reply("–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é –º–æ–∂–Ω–æ –ø—Ä–æ–∫–∞—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –¥–æ 60 —É—Ä–æ–≤–Ω—è!")
                        return

                    if level > 5:
                        await message.reply("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: `5`", parse_mode="Markdown")
                        return

                    total_cost = calculate.ql(current_qualification, (current_qualification+level))
                    total_cost = str('{0:,}'.format(total_cost).replace(',', ' '))
                    text += f"–í–∞—à —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏: `{current_qualification}` üë®üèª‚Äçüî¨\n"
                    text += f"–£–ª—É—á—à–µ–Ω–∏–µ –Ω–∞ _+{level}_ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å: "
                    text += f"`{total_cost}` üß¨\n\n"
                    text += f"*–ß—Ç–æ–±—ã –ø–æ–¥–≤–µ—Ä–¥–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ –Ω–∞–ø–∏—à–∏—Ç–µ:* `++–∫–≤–∞–ª–∞ {level}`"

                    await message.reply(text=text, parse_mode="Markdown")
                
                else:
                    await message.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.")
                    return 

            else:
                await message.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.")
                return  
        else:
            await message.reply(text=f"{message.from_user.first_name}, " \
                                f"—É –≤–∞—Å –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ –ª–∞–±–æ—Ä–æ—Ç–æ—Ä–∏—è!\n\n"\
                                f"–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É `–±–∏–æ–ª–∞–±` —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –µ—ë",
                                parse_mode="Markdown")
            
            return

    elif message.text.lower().startswith("++–∫–≤–∞–ª–∞ ") or message.text.lower().startswith("++–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è "):
        if lab.has_lab:  
            msg = message.text.lower().split(" ")
            text = "üî¨ _–ú–µ–Ω—é –ø—Ä–æ–∫–∞—á–∫–∏ —É—Ä–æ–≤–Ω–µ–π_\n\n"
            current_qualification = lab.qualification

            if current_qualification == 60:
                await message.reply("–£ –≤–∞—Å –∏ —Ç–∞–∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏ -_-")
                return 

            if len(msg) == 2:
                if msg[1].isdigit():
                    level = int(msg[1])

                    if level <= 0:
                        await message.reply("–ß—É–≤–∞–∫)")
                        return

                    if current_qualification + level > 60:
                        await message.reply("–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é –º–æ–∂–Ω–æ –ø—Ä–æ–∫–∞—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –¥–æ 60 —É—Ä–æ–≤–Ω—è!")
                        return

                    if level > 5:
                        await message.reply("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: `5`", parse_mode="Markdown")
                        return

                    current_balance = lab.bio_res
                    total_cost = calculate.ql(current_qualification, (current_qualification+level))
                    if current_balance < total_cost:
                        await message.reply("*–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∏–æ-—Ä–µ—Å—É—Ä—Å–æ–≤!*", parse_mode="Markdown")

                    else:
                        lab.bio_res -= total_cost
                        lab.qualification += level
                        lab.save()
                        total_cost = str('{0:,}'.format(total_cost).replace(',', ' '))
                        text += f"–í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ `+{level}` –∫ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏!\n"
                        text += f"–° –±–∞–ª–∞–Ω—Å–∞ —Å–Ω—è—Ç–æ `{total_cost}` –±–∏–æ-—Ä–µ—Å—É—Ä—Å–æ–≤ üß¨"
                        await message.reply(text=text, parse_mode="Markdown")
                
                else:
                    await message.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.")
                    return 

            else:
                await message.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.")
                return  

        else:
            await message.reply(text=f"{message.from_user.first_name}, " \
                                f"—É –≤–∞—Å –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ –ª–∞–±–æ—Ä–æ—Ç–æ—Ä–∏—è!\n\n"\
                                f"–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É `–±–∏–æ–ª–∞–±` —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –µ—ë",
                                parse_mode="Markdown")
            
            return

    ''' –ü–†–û–ö–ê–ß–ö–ê –ó–ê–†–ê–ó–ù–û–°–¢–ò '''

    if message.text.lower().startswith("+–∑–∞—Ä ") or message.text.lower().startswith("+–∑–∞—Ä–∞–∑–Ω–æ—Å—Ç—å "):
        if lab.has_lab:  
            msg = message.text.lower().split(" ")
            text = "üî¨ _–ú–µ–Ω—é –ø—Ä–æ–∫–∞—á–∫–∏ —É—Ä–æ–≤–Ω–µ–π_\n\n"
            current_infectiousness = lab.infectiousness

            if len(msg) == 2:
                if msg[1].isdigit():
                    level = int(msg[1])

                    if level <= 0:
                        await message.reply("–ß—É–≤–∞–∫)")
                        return

                    if level > 5:
                        await message.reply("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: `5`", parse_mode="Markdown")
                        return
                    total_cost = calculate.zz(current_infectiousness, (current_infectiousness+level))
                    total_cost = str('{0:,}'.format(total_cost).replace(',', ' '))
                    text += f"–í–∞—à —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –∑–∞—Ä–∞–∑–Ω–æ—Å—Ç–∏: `{current_infectiousness}` ü¶†\n"
                    text += f"–£–ª—É—á—à–µ–Ω–∏–µ –Ω–∞ _+{level}_ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å: "
                    text += f"`{total_cost}` üß¨\n\n"
                    text += f"*–ß—Ç–æ–±—ã –ø–æ–¥–≤–µ—Ä–¥–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ –Ω–∞–ø–∏—à–∏—Ç–µ:* `++–∑–∞—Ä {level}`"

                    await message.reply(text=text, parse_mode="Markdown")
                
                else:
                    await message.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.")
                    return 

            else:
                await message.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.")
                return  
        else:
            await message.reply(text=f"{message.from_user.first_name}, " \
                                f"—É –≤–∞—Å –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ –ª–∞–±–æ—Ä–æ—Ç–æ—Ä–∏—è!\n\n"\
                                f"–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É `–±–∏–æ–ª–∞–±` —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –µ—ë",
                                parse_mode="Markdown")
            
            return

    elif message.text.lower().startswith("++–∑–∞—Ä ") or message.text.lower().startswith("++–∑–∞—Ä–∞–∑–Ω–æ—Å—Ç—å "):
        if lab.has_lab:  
            msg = message.text.lower().split(" ")
            text = "üî¨ _–ú–µ–Ω—é –ø—Ä–æ–∫–∞—á–∫–∏ —É—Ä–æ–≤–Ω–µ–π_\n\n"
            current_infectiousness = lab.infectiousness

            if len(msg) == 2:
                if msg[1].isdigit():
                    level = int(msg[1])

                    if level <= 0:
                        await message.reply("–ß—É–≤–∞–∫)")
                        return

                    if level > 5:
                        await message.reply("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: `5`", parse_mode="Markdown")
                        return

                    current_balance = lab.bio_res
                    total_cost = calculate.zz(current_infectiousness, (current_infectiousness+level))
                    if current_balance < total_cost:
                        await message.reply("*–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∏–æ-—Ä–µ—Å—É—Ä—Å–æ–≤!*", parse_mode="Markdown")

                    else:
                        lab.bio_res -= total_cost
                        lab.infectiousness += level
                        lab.save()
                        total_cost = str('{0:,}'.format(total_cost).replace(',', ' '))
                        text += f"–í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ `{level}` –∑–∞—Ä–∞–∑–Ω–æ—Å—Ç–∏!\n"
                        text += f"–° –±–∞–ª–∞–Ω—Å–∞ —Å–Ω—è—Ç–æ `{total_cost}` –±–∏–æ-—Ä–µ—Å—É—Ä—Å–æ–≤ üß¨"
                        await message.reply(text=text, parse_mode="Markdown")
                
                else:
                    await message.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.")
                    return 

            else:
                await message.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.")
                return  

        else:
            await message.reply(text=f"{message.from_user.first_name}, " \
                                f"—É –≤–∞—Å –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ –ª–∞–±–æ—Ä–æ—Ç–æ—Ä–∏—è!\n\n"\
                                f"–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É `–±–∏–æ–ª–∞–±` —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –µ—ë",
                                parse_mode="Markdown")
            
            return

        
    ''' –ü–†–û–ö–ê–ß–ö–ê –ò–ú–ú–£–ù–ò–¢–ï–¢–ê '''

    if message.text.lower().startswith("+–∏–º—É–Ω ") or message.text.lower().startswith("+–∏–º–º—É–Ω–∏—Ç–µ—Ç "):
        if lab.has_lab:  
            msg = message.text.lower().split(" ")
            text = "üî¨ _–ú–µ–Ω—é –ø—Ä–æ–∫–∞—á–∫–∏ —É—Ä–æ–≤–Ω–µ–π_\n\n"
            current_immunity = lab.immunity

            if len(msg) == 2:
                if msg[1].isdigit():
                    level = int(msg[1])

                    if level <= 0:
                        await message.reply("–ß—É–≤–∞–∫)")
                        return

                    if level > 5:
                        await message.reply("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: `5`", parse_mode="Markdown")
                        return

                    total_cost = calculate.im(current_immunity, (current_immunity+level))
                    total_cost = str('{0:,}'.format(total_cost).replace(',', ' '))

                    text += f"–í–∞—à —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞: `{current_immunity}` üõ°\n"
                    text += f"–£–ª—É—á—à–µ–Ω–∏–µ –Ω–∞ _+{level}_ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å: "
                    text += f"`{total_cost}` üß¨\n\n"
                    text += f"*–ß—Ç–æ–±—ã –ø–æ–¥–≤–µ—Ä–¥–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ –Ω–∞–ø–∏—à–∏—Ç–µ:* `++–∏–º—É–Ω {level}`"

                    await message.reply(text=text, parse_mode="Markdown")
                
                else:
                    await message.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.")
                    return 

            else:
                await message.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.")
                return  
        else:
            await message.reply(text=f"{message.from_user.first_name}, " \
                                f"—É –≤–∞—Å –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ –ª–∞–±–æ—Ä–æ—Ç–æ—Ä–∏—è!\n\n"\
                                f"–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É `–±–∏–æ–ª–∞–±` —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –µ—ë",
                                parse_mode="Markdown")
            
            return

    elif message.text.lower().startswith("++–∏–º—É–Ω ") or message.text.lower().startswith("++–∏–º–º—É–Ω–∏—Ç–µ—Ç "):
        if lab.has_lab:  
            msg = message.text.lower().split(" ")
            text = "üî¨ _–ú–µ–Ω—é –ø—Ä–æ–∫–∞—á–∫–∏ —É—Ä–æ–≤–Ω–µ–π_\n\n"
            current_immunity = lab.infectiousness

            if len(msg) == 2:
                if msg[1].isdigit():
                    level = int(msg[1])

                    if level <= 0:
                        await message.reply("–ß—É–≤–∞–∫)")
                        return

                    if level > 5:
                        await message.reply("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: `5`", parse_mode="Markdown")
                        return

                    current_balance = lab.bio_res
                    total_cost = calculate.im(current_immunity, (current_immunity+level))
                    if current_balance < total_cost:
                        await message.reply("*–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∏–æ-—Ä–µ—Å—É—Ä—Å–æ–≤!*", parse_mode="Markdown")

                    else:
                        lab.bio_res -= total_cost
                        lab.immunity += level
                        lab.save()
                        total_cost = str('{0:,}'.format(total_cost).replace(',', ' '))
                        text += f"–í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ `{level}` –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞!\n"
                        text += f"–° –±–∞–ª–∞–Ω—Å–∞ —Å–Ω—è—Ç–æ `{total_cost}` –±–∏–æ-—Ä–µ—Å—É—Ä—Å–æ–≤ üß¨"
                        await message.reply(text=text, parse_mode="Markdown")
                
                else:
                    await message.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.")
                    return 

            else:
                await message.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.")
                return  

        else:
            await message.reply(text=f"{message.from_user.first_name}, " \
                                f"—É –≤–∞—Å –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ –ª–∞–±–æ—Ä–æ—Ç–æ—Ä–∏—è!\n\n"\
                                f"–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É `–±–∏–æ–ª–∞–±` —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –µ—ë",
                                parse_mode="Markdown")
            
            return

    ''' –ü–†–û–ö–ê–ß–ö–ê –õ–ï–¢–ê–õ–¨–ù–û–°–¢–ò '''

    if message.text.lower().startswith("+–ª–µ—Ç–∞–ª ") or message.text.lower().startswith("+–ª–µ—Ç–∞–ª—å–Ω–æ—Å—Ç—å "):
        if lab.has_lab:  
            msg = message.text.lower().split(" ")
            text = "üî¨ _–ú–µ–Ω—é –ø—Ä–æ–∫–∞—á–∫–∏ —É—Ä–æ–≤–Ω–µ–π_\n\n"
            current_mortality = lab.immunity

            if len(msg) == 2:
                if msg[1].isdigit():
                    level = int(msg[1])

                    if level <= 0:
                        await message.reply("–ß—É–≤–∞–∫)")
                        return

                    if level > 5:
                        await message.reply("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: `5`", parse_mode="Markdown")
                        return

                    total_cost = calculate.ll(current_mortality, (current_mortality+level))
                    total_cost = str('{0:,}'.format(total_cost).replace(',', ' '))

                    text += f"–í–∞—à —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –ª–µ—Ç–∞–ª—å–Ω–æ—Å—Ç–∏: `{current_mortality}` üõ°\n"
                    text += f"–£–ª—É—á—à–µ–Ω–∏–µ –Ω–∞ _+{level}_ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å: "
                    text += f"`{total_cost}` üß¨\n\n"
                    text += f"*–ß—Ç–æ–±—ã –ø–æ–¥–≤–µ—Ä–¥–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ –Ω–∞–ø–∏—à–∏—Ç–µ:* `++–ª–µ—Ç–∞–ª {level}`"

                    await message.reply(text=text, parse_mode="Markdown")
                
                else:
                    await message.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.")
                    return 

            else:
                await message.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.")
                return  
        else:
            await message.reply(text=f"{message.from_user.first_name}, " \
                                f"—É –≤–∞—Å –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ –ª–∞–±–æ—Ä–æ—Ç–æ—Ä–∏—è!\n\n"\
                                f"–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É `–±–∏–æ–ª–∞–±` —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –µ—ë",
                                parse_mode="Markdown")
            
            return

    elif message.text.lower().startswith("++–ª–µ—Ç–∞–ª ") or message.text.lower().startswith("++–ª–µ—Ç–∞–ª—å–Ω–æ—Å—Ç—å "):
        if lab.has_lab:  
            msg = message.text.lower().split(" ")
            text = "üî¨ _–ú–µ–Ω—é –ø—Ä–æ–∫–∞—á–∫–∏ —É—Ä–æ–≤–Ω–µ–π_\n\n"
            current_mortality = lab.infectiousness

            if len(msg) == 2:
                if msg[1].isdigit():
                    level = int(msg[1])

                    if level <= 0:
                        await message.reply("–ß—É–≤–∞–∫)")
                        return

                    if level > 5:
                        await message.reply("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: `5`", parse_mode="Markdown")
                        return

                    current_balance = lab.bio_res
                    total_cost = calculate.ll(current_mortality, (current_mortality+level))
                    if current_balance < total_cost:
                        await message.reply("*–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∏–æ-—Ä–µ—Å—É—Ä—Å–æ–≤!*", parse_mode="Markdown")

                    else:
                        lab.bio_res -= total_cost
                        lab.immunity += level
                        lab.save()
                        total_cost = str('{0:,}'.format(total_cost).replace(',', ' '))
                        text += f"–í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ `{level}` –ª–µ—Ç–∞–ª—å–Ω–æ—Å—Ç–∏!\n"
                        text += f"–° –±–∞–ª–∞–Ω—Å–∞ —Å–Ω—è—Ç–æ `{total_cost}` –±–∏–æ-—Ä–µ—Å—É—Ä—Å–æ–≤ üß¨"
                        await message.reply(text=text, parse_mode="Markdown")
                
                else:
                    await message.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.")
                    return 

            else:
                await message.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.")
                return  

        else:
            await message.reply(text=f"{message.from_user.first_name}, " \
                                f"—É –≤–∞—Å –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ –ª–∞–±–æ—Ä–æ—Ç–æ—Ä–∏—è!\n\n"\
                                f"–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É `–±–∏–æ–ª–∞–±` —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –µ—ë",
                                parse_mode="Markdown")
            
            return


print("improvements init")