'''

–ú–æ–¥—É–ª—å —Å –ø–æ–∫–∞–∑–æ–º –ª–∞–±—ã

'''

import os
import re
import time
import datetime
import html

from app import dp, bot, query, strconv, save_message, is_host, IsAdmin
from config import MYSQL_HOST
from libs.handlers import labs

from aiogram import types
from aiogram.types import ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, InputFile
from aiogram.utils.callback_data import CallbackData

from math import floor

vote_cb = CallbackData('vote', 'action', 'id', 'chat_id')

def get_keyboard_first(message: types.Message):
    keyboard_markup = types.InlineKeyboardMarkup(row_width=2)
    keyboard_markup.row(
        types.InlineKeyboardButton('–ñ–µ—Ä—Ç–≤—ã', callback_data=vote_cb.new(action='victims', id=message.from_user.id, chat_id=message.chat.id)),
        types.InlineKeyboardButton('–ë–æ–ª–µ–∑–Ω–∏', callback_data=vote_cb.new(action='issues', id=message.from_user.id, chat_id=message.chat.id)),
        # types.InlineKeyboardButton('.–¥', callback_data=vote_cb.new(action='d', id=message.from_user.id)),
        # types.InlineKeyboardButton('–î—Ä—É–≥–æ–µ', callback_data=vote_cb.new(action='other', id=message.from_user.id)),
    )
    keyboard_markup.row(
        types.InlineKeyboardButton('‚ùå', callback_data=vote_cb.new(action='delete msg', id=message.from_user.id, chat_id=message.chat.id)),
    )

    return keyboard_markup


@dp.message_handler(content_types=["text"])
async def show_lab(message: types.Message):

    if message.text.lower() == "–±–∏–æ–ª–∞–±":

        """
            –ö–æ–º–∞–Ω–¥–∞ –≤—ã–≤–æ–¥–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏ —é–∑–µ—Ä–∞
        """

        lab = labs.get_lab(message['from']['id'])
        if not lab.has_lab: 
            lab = labs.create_lab(message['from']['id'])

        # –¥–∞–ª—å—à–µ –ª–∞–±–∞ —Ç–æ—á–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–¥–µ–∂–∏—Ç—Å—è –≤ lab
        """
            –ø–æ–ª–µ                –æ–ø–∏—Å–∞–Ω–∏–µ

            user_id             —é–∑–µ—Ä –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            name                –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_name           —é–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            corp –∫–æ—Ä–ø           –∞–π–¥–∏ –∫–æ—Ä–ø—ã
            patogen_name        –∏–º—è –ø–∞—Ç–æ–≥–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            all_patogens        –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö –ø–∞—Ç–æ–≥–µ–Ω–æ–≤ —É —é–∑–µ—Ä–∞
            patogens            –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø–∞—Ç–æ–≥–µ–Ω–æ–≤ —É —é–∑–µ—Ä–∞
            last_patogen_time   –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–∞—Ç–æ–≥–µ–Ω–∞ (unix –º–µ—Ç–∫–∞)

            qualification       —É—Ä–æ–≤–µ–Ω—å –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏
            infectiousness      —É—Ä–æ–≤–µ–Ω—å –∑–∞—Ä–∞–∑–Ω–æ—Å—Ç–∏
            immunity            —É—Ä–æ–≤–µ–Ω—å –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞
            mortality           —É—Ä–æ–≤–µ–Ω—å –ª–µ—Ç–∞–ª—å–Ω–æ—Å—Ç–∏
            security            —É—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å–∏

            bio_exp             –±–∏–æ –æ–ø—ã—Ç
            bio_res             –±–∏–æ —Ä–µ—Å—É—Ä—Å

            all_operations      –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞—Ä–∞–∂–µ–Ω–∏—è
            suc_operations      –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞—Ä–∞–∂–µ–Ω–∏—è
            all_issue           –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫ –∑–∞—Ä–∞–∑–∏—Ç—å —ç—Ç–æ–≥–æ —é–∑–µ—Ä–∞
            prevented_issue     –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –∑–∞—Ä–∞–∑–∏—Ç—å —ç—Ç–æ–≥–æ —é–∑–µ—Ä–∞
            victims             –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –∂–µ—Ä—Ç–≤
            disease             –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –±–æ–ª–µ–∑–Ω–µ–π
            coins               –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–∏–Ω–æ–≤
            bio_valuta          –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–∫–æ–π –ª–∏–±–æ –≤–∞–ª—é—Ç—ã / –∏—Ä–∏—Å–æ–∫

            last_farma          –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–º–∞–Ω–¥—ã —Ñ–µ—Ä–º–∞
            last_issue          –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞—Ä–∞–∂–µ–Ω–∏—è
            last_daily          –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –µ–∂–∏

            virus_chat          —á–∞—Ç –∞–π–¥–∏, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤–∏—Ä—É—Å—ã (None –µ—Å–ª–∏ –≤ –ª—Å)
        """


        def get_impr_count(start, biores, power): # –ø–æ–¥—Å—á–µ—Ç –∫–æ–ª–≤–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π –ø—Ä–æ–∫–∞—á–∫–∏
            count = 0
            price = 0
            while price <= biores:
                count += 1
                price += floor((int(start) + count) ** power)
            return count - 1
        


        '''  –ù–∞–∑–≤–∞–Ω–∏–µ –≤–∏—Ä—É—Å–∞ '''

        text = f'ü¶† –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∏—Ä—É—Å–µ: `{lab.patogen_name if lab.patogen_name != None else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}`\n\n'

        '''  –í–ª–∞–¥–µ–ª–µ—Ü –ª–∞–±—ã '''
        owner_link = f'https://t.me/{lab.user_name}' if lab.user_name != None else f'tg://openmessage?user_id={lab.user_id}'
        text += f'üë∫ –í–ª–∞–¥–µ–ª–µ—Ü: [{lab.name}]({owner_link})\n'

        ''' –ö–æ—Ä–ø–æ—Ä–∞—Ü–∏—è '''
        if lab.corp != None: text += f'üè¢ –û—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏: [{lab.corp_name}](tg://openmessage?user_id={lab.corp_owner_id})\n\n'
        else: text += f'\n'
        
        ''' –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ç–æ–≥–µ–Ω–æ–≤ ''' 
        text += f'üß™ –ü–∞—Ç–æ–≥–µ–Ω–æ–≤: {lab.patogens} –∏–∑ {lab.all_patogens} (`+{get_impr_count(lab.all_patogens, lab.bio_res, 2)}`)\n'

        ''' –£—Ä–æ–≤–µ–Ω—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ '''  
        if lab.qualification < 60: 
            qualification_count = get_impr_count(lab.qualification, lab.bio_res, 2.6)
            qualification_count = qualification_count if qualification_count + lab.qualification <= 60 else 60 - lab.qualification
            text += f'üë®üèª‚Äçüî¨ –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞: {lab.qualification} (`{61 - lab.qualification} –º–∏–Ω.` | `+{qualification_count}`) \n\n'
        else: text += f'üë®üèª‚Äçüî¨ –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞: {lab.qualification} (`1 –º–∏–Ω.`) \n\n'
        
        ''' –ù–∞–≤—ã–∫–∏ '''
        text += f'üî¨ **–ù–ê–í–´–ö–ò:**\n'
        text += f'ü¶† –ó–∞—Ä–∞–∑–Ω–æ—Å—Ç—å: {lab.infectiousness} —É—Ä. (`+{get_impr_count(lab.infectiousness, lab.bio_res, 2.5)}`)\n'
        text += f'üõ° –ò–º–º—É–Ω–∏—Ç–µ—Ç: {lab.immunity} —É—Ä. (`+{get_impr_count(lab.immunity, lab.bio_res, 2.45)}`)\n'
        text += f'‚ò†Ô∏è –õ–µ—Ç–∞–ª—å–Ω–æ—Å—Ç—å: {lab.mortality} —É—Ä. (`+{get_impr_count(lab.mortality, lab.bio_res, 1.95)}`)\n'
        text += f'üïµÔ∏è‚Äç‚ôÇÔ∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: {lab.security} —É—Ä. (`+{get_impr_count(lab.security, lab.bio_res, 2.1)}`)\n\n'

        ''' –î–∞–Ω–Ω—ã–µ ''' 
        text += f'‚õ© **–î–ê–ù–ù–´–ï:**\n'
        text += f'‚ò£Ô∏è –ë–∏–æ-–æ–ø—ã—Ç: {strconv.num_to_str(lab.bio_exp)}\n'
        text += f'üß¨ –ë–∏–æ-—Ä–µ—Å—É—Ä—Å: {strconv.num_to_str(lab.bio_res)}\n'

        text += f'üò∑ –°–ø–µ—Ü–æ–ø–µ—Ä–∞—Ü–∏–π: {lab.suc_operations}/{lab.all_operations} (`{round(100 * int(lab.suc_operations) / int(lab.all_operations if lab.all_operations != 0 else 1))}%`)\n'
        text += f'ü•Ω –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω—ã: {lab.prevented_issue}/{lab.all_issue} (`{round(100* int(lab.prevented_issue) / int(lab.all_issue if lab.all_issue != 0 else 1))}%`)\n\n'

        ''' –ì–æ—Ä—è—á–∫–∞ '''
        if lab.illness != None:
            declination = "" # —Å–∫–ª–æ–Ω–µ–Ω–∏–µ –º–∏–Ω—É—Ç—É/–º–∏–Ω—É—Ç—ã/–º–∏–Ω—É—Ç
            untill = floor(lab.illness['illness'] / 60)
            if untill <= 20:
                if untill == 1: declination = "–º–∏–Ω—É—Ç–∞"
                elif untill <= 4: declination = "–º–∏–Ω—É—Ç—ã"
                else: declination = "–º–∏–Ω—É—Ç"
            else: 
                if untill%10 == 1: declination = "–º–∏–Ω—É—Ç–∞"
                elif untill%10 <= 4: declination = "–º–∏–Ω—É—Ç—ã"
                else: declination = "–º–∏–Ω—É—Ç"

            text += f'ü•¥ –ì–æ—Ä—è—á–∫–∞ –≤—ã–∑–≤–∞–Ω–Ω–∞—è –ø–∞—Ç–æ–≥–µ–Ω–æ–º `{lab.illness["patogen"]}` –µ—â—ë `{untill}` {declination}.'

        await bot.send_message(chat_id=message.chat.id, 
            text=text, 
            reply_to_message_id=message.message_id, 
            parse_mode="Markdown",
            disable_web_page_preview=True,
            reply_markup=get_keyboard_first(message)
        )

        lab.save() 


@dp.callback_query_handler(vote_cb.filter(action='issues'))
async def first_help_editor(query: types.CallbackQuery, callback_data: dict):
    from_user_id = callback_data["id"]
    message_name = query.from_user.first_name
    chat_id = callback_data["chat_id"]
    if from_user_id == str(query.from_user.id):

        lab = labs.get_lab(from_user_id)
        text = f'–ë–æ–ª–µ–∑–Ω–∏ –∏–≥—Ä–æ–∫–∞ [{message_name}](tg://openmessage?user_id={from_user_id})\n\n'
        
        count = 0
        in_list = []
        for item in list(reversed(lab.get_issues())):
            if item['user_id'] in in_list: continue
            if item['until_infect'] > int(time.time()):
                until = datetime.datetime.fromtimestamp(item['until_infect']).strftime("%d.%m.%Y")
                if item['hidden'] == 0: text += f'{count + 1}. [{strconv.escape_markdown(item["pat_name"])}](tg://openmessage?user_id={item["user_id"]}) | –¥–æ {until}\n'
                else: text += f'{count + 1}. {strconv.escape_markdown(item["pat_name"])} | –¥–æ {until}\n'
                in_list.append(item['user_id'])

                count += 1
                if count == 25: break
                
        victims_keyboard = types.InlineKeyboardMarkup(row_width=1)
        victims_keyboard.row(
            types.InlineKeyboardButton('‚ùå', callback_data=vote_cb.new(action='delete msg', id=query.from_user.id, chat_id=chat_id)),
        )

        await bot.send_message(chat_id=chat_id, text=text, parse_mode="Markdown", reply_markup=victims_keyboard)
        await query.message.edit_reply_markup(victims_keyboard)
        await query.answer()

    
    else:
        await query.answer("–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è —Ç–µ–±—è :)")


@dp.callback_query_handler(vote_cb.filter(action='victims'))
async def first_help_editor(query: types.CallbackQuery, callback_data: dict):
    from_user_id = callback_data["id"]
    message_name = query.from_user.first_name
    chat_id = callback_data["chat_id"]
    if from_user_id == str(query.from_user.id):

        lab = labs.get_lab(from_user_id)
        name = html.escape(strconv.deEmojify(query.from_user.first_name), quote=True)
        name = name if name.replace(" ", "") != "" else item["user_id"]

        text = f'–ñ–µ—Ä—Ç–≤—ã –∏–≥—Ä–æ–∫–∞ <a href="tg://openmessage?user_id={query.from_user.id}">{name}</a>\n\n'
        profit = 0

        count = 0
        victims = lab.get_victums()
        for item in list(reversed(victims)):
            if item['until_infect'] > int(time.time()):
                profit += item["profit"]
                if count < 25:
                    name = html.escape(strconv.deEmojify(item["name"]), quote=True)
                    name = name if name.replace(" ", "") != "" else item["user_id"]
                    until = datetime.datetime.fromtimestamp(item['until_infect']).strftime("%d.%m.%Y")
                    text += f'{count + 1}. <a href="tg://openmessage?user_id={item["user_id"]}">{name}</a> | +{item["profit"]} | –¥–æ {until}\n'

                count += 1
        
        text += f'\n–û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: +{strconv.format_nums(profit)} –±–∏–æ-—Ä–µ—Å—É—Ä—Å–æ–≤ üß¨'

        
        victims_keyboard = types.InlineKeyboardMarkup(row_width=1)
        victims_keyboard.row(
            types.InlineKeyboardButton('‚ùå', callback_data=vote_cb.new(action='delete msg', id=query.from_user.id, chat_id=chat_id)),
        )

        await bot.send_message(chat_id=chat_id, text=text, parse_mode="HTML", reply_markup=victims_keyboard)
        await query.message.edit_reply_markup(victims_keyboard)
        await query.answer()

    
    else:
        await query.answer("–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è —Ç–µ–±—è :)")

@dp.callback_query_handler(vote_cb.filter(action='delete msg'))
async def first_help_editor(query: types.CallbackQuery, callback_data: dict):
    from_user_id = callback_data["id"]
    chat_id = callback_data["chat_id"]
    if from_user_id == str(query.from_user.id):

        await bot.delete_message(chat_id=chat_id, message_id=query.message.message_id)

    else:
        await query.answer("–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è —Ç–µ–±—è :)")